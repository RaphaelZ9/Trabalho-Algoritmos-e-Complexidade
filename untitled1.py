# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yBwCT88X3xn0QYjxpvgaCL2t3wwWb2sW
"""

import random
import time

def MergeSort(arry):
    if len(arry) <= 1:
        return arry
    meio = len(arry) // 2
    esquerda = MergeSort(arry[:meio])
    direita = MergeSort(arry[meio:])
    return merge(esquerda, direita)

def merge(esquerda, direita):
    resultado = []
    while len(esquerda) > 0 and len(direita) > 0:
        if esquerda[0] <= direita[0]:
            resultado.append(esquerda.pop(0))
        else:
            resultado.append(direita.pop(0))
    resultado.extend(esquerda)
    resultado.extend(direita)
    return resultado

Tamanhos = [1000, 10000, 100000, 1000000]

for tamanho in Tamanhos:
    arry = [random.randint(0, 1000) for _ in range(tamanho)]

    iniciar_tempo = time.time()
    MergeSort(arry.copy())
    tempo_merge = time.time() - iniciar_tempo
    if tempo_merge >= 60:
      print(f"Tamanho do Vetor : {tamanho} | Tempo levado com Bubble Sort: {tempo_merge/60:.4f} minutos")
    else:
      print(f"Tamanho do Vetor : {tamanho} | Tempo levado com Bubble Sort: {tempo_merge:.4f} segundos")

import random
import time

def BubbleSort(arry):
    n = len(arry)
    for i in range(n-1):
        for j in range(n-i-1):
            if arry[j] > arry[j+1]:
                arry[j], arry[j+1] = arry[j+1], arry[j]
    return arry

Tamanhos = [1000, 10000,100000,1000000]

for tamanho in Tamanhos:
    arry = [random.randint(0, 1000) for _ in range(tamanho)]

    start_time = time.time()
    BubbleSort(arry.copy())
    tempo_bubble = time.time() - start_time
    if tempo_bubble >= 60:
      print(f"Tamanho do Vetor : {tamanho} | Tempo levado com Bubble Sort: {tempo_bubble/60:.4f} minutos")
    else:
      print(f"Tamanho do Vetor : {tamanho} | Tempo levado com Bubble Sort: {tempo_bubble:.4f} segundos")